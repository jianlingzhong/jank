(ns jank.math)

(defn tan [o]
  (native/raw "__value = make_box(std::tan(to_real(~{ o })));"))

(defn
  ^{:arities {1 {:supports-unboxed-input? true
                 :unboxed-output? true}}}
  sqrt [o]
  (native/raw "__value = make_box(std::sqrt(to_real(~{ o })));"))

(defn
  ^{:arities {1 {:supports-unboxed-input? true
                 :unboxed-output? true}}}
  abs [o]
  (native/raw "__value = runtime::abs(~{ o });"))

(defn
  ^{:arities {2 {:supports-unboxed-input? true
                 :unboxed-output? true}}}
  pow [x y]
  (native/raw "__value = make_box(runtime::pow(~{ x }, ~{ y }));"))
(defn + [x y]
  (native/raw "__value = make_box(runtime::add(~{ x }, ~{ y }));"))
(defn - [x y]
  (native/raw "__value = runtime::sub(~{ x }, ~{ y });"))

(defn / [x y]
  (native/raw "__value = runtime::div(~{ x } ~{ y });"))
(defn * [x y]
  (native/raw "__value = runtime::mul(~{ x } ~{ y });"))
  